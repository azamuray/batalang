version: '3.8'

services:
  web:
    build: .
    ports:
      - "5002:5000"
    restart: unless-stopped
    environment:
      - FLASK_ENV=production
    networks:
      - app-network

  auth:
    build:
      context: ./auth
      dockerfile: Dockerfile
    ports:
      - "5001:5000"
    restart: unless-stopped
    environment:
      - FLASK_ENV=production
      - FLASK_APP=wsgi.py
    volumes:
      - ./auth/data:/app/data
    depends_on:
      - web
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - web
      - auth
    networks:
      - app-network
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    networks:
      - app-network
    command: certonly --webroot -w /var/www/certbot --force-renewal --email admin@batalang.ru -d batalang.ru --agree-tos

  init:
    image: alpine:latest
    volumes:
      - ./init-ssl.sh:/init-ssl.sh
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
      - ./ssl:/etc/nginx/ssl
      - ./nginx.conf:/etc/nginx/nginx.conf
    networks:
      - app-network
    command: >
      sh -c "
        apk add --no-cache bash curl openssl &&
        chmod +x /init-ssl.sh &&
        /init-ssl.sh
      "
    depends_on:
      - nginx
    restart: "no"
    profiles:
      - init

networks:
  app-network:
    driver: bridge

volumes:
  certbot-conf:
  certbot-www:
